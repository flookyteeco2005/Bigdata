package ca.montrealcollege.bigdata.kafka;

import java.util.ArrayList;
import java.util.Properties;

import org.apache.kafka.clients.consumer.Consumer;
import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.common.serialization.LongDeserializer;
import org.apache.kafka.common.serialization.StringDeserializer;

public class KafkaRunner {

	public static void main(String[] args) {
		// 1. Configuration
		Properties props = new Properties();
		props.put("bootstrap.servers", "localhost:9092");
		props.put("group.id", "test_group_id");
		props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, 
				LongDeserializer.class.getName());
		props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, 
				StringDeserializer.class.getName());
		props.put("auto.offset.reset", "earliest");
		
		// 2. Consumer
		Consumer<Long, String> consumer =
                new KafkaConsumer<Long, String>(props);
		
		// 3. Subscription
		ArrayList<String> topics = new ArrayList<String>();
		topics.add("test");
		consumer.subscribe(topics);
		
		// 4. Consumption
		ConsumerRecords<Long, String> records = consumer.poll(1000);
		for(ConsumerRecord<Long, String> record : records) {
			System.out.println(record.value());
		}
		
		// 5. Closing
		consumer.close();
	}

}
